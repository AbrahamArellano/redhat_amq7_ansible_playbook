---
- name: Upload AMQ binaries on Server
  copy:
    src: /{{ binary['folder'] }}/amq-broker-{{ amq['version'] }}.{{ amq['patch'] }}-bin.zip
    dest: /tmp
    force: no
    owner: "{{ user['name'] }}"
    group: "{{ user['group'] }}"

- name: Check whether AMQ core exists
  stat:
    path: '{{ amq_core_dir }}'
  register: amq_core_dir_stat
  
- name: Check whether AMQ instances exists
  stat:
    path: '{{ amq_broker_dir }}'
  register: amq_broker_dir_stat

- name: Install AMQ binaries on Server
  unarchive:
    src: /tmp/amq-broker-{{ amq['version'] }}.{{ amq['patch'] }}-bin.zip
    dest: '{{ amq_home }}'
    remote_src: true
    keep_newer: yes
    owner: "{{ user['name'] }}"
    group: "{{ user['group'] }}"
  when: not amq_core_dir_stat.stat.exists
    
- name: Rename directory
  command: mv '{{ amq_home }}/amq-broker-{{ amq['version'] }}.{{ amq['patch'] }}' '{{ amq_core_dir }}'
  when: not amq_core_dir_stat.stat.exists

- name: Create AMQ instances folder
  file:
    path: "{{ amq_broker_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user['name'] }}"
    group: "{{ user['group'] }}"
  when: not amq_broker_dir_stat.stat.exists
  
- name: Create AMQ shared folder
  file:
    path: "{{ amq_broker_data_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user['name'] }}"
    group: "{{ user['group'] }}"
  

#- name: Link current version to installed version
#  file:
#    src: "{{ amq_base }}/{{ amq_name }}/jboss-amq-{{ amq['version'] }}.redhat-{{ amq['patch'] }}"
#    dest: '{{ amq_home }}'
#    state: link
#    owner: "{{ user['name'] }}"
#    group: "{{ user['name'] }}"

#- block:
#  - name: Start AMQ service
#    shell: "{{ amq_home }}/bin/start"
#    environment:
#      BASH_ENV: "~/.bash_profile" 
#    args:
#      executable: "/bin/bash"
#      warn: yes
#    become: yes
#    become_user: amq
#    changed_when: true
#    async: 60
#    poll: 0


